<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Grammar Question Editor</title>
  <style>
    body { font-family: sans-serif; padding: 20px; max-width: 800px; margin: auto; }
    .question { border: 1px solid #ccc; padding: 10px; margin-bottom: 10px; }
    label { display: block; margin: 5px 0; }
    textarea { width: 100%; height: 60px; }
    button { margin-top: 10px; }
  </style>
</head>
<body>
  <h1>Grammar Question Editor</h1>
  <div id="questions"></div>
  <button onclick="addQuestion()">Add Question</button>
  <button onclick="downloadJSON()">Download JSON</button>

  <script>
    const GITHUB_JSON_URL = "https://raw.githubusercontent.com/SMatthewG/LinguaJourney5292025/main/grammar_questions.json"; // <-- update this

    let questions = [];

    async function loadQuestions() {
      try {
        const res = await fetch(GITHUB_JSON_URL);
        questions = await res.json();
        renderQuestions();
      } catch (err) {
        alert("Failed to load questions from GitHub. Check the URL or internet.");
        console.error(err);
      }
    }

    function renderQuestions() {
      const container = document.getElementById("questions");
      container.innerHTML = "";
      questions.forEach((q, index) => {
        const div = document.createElement("div");
        div.className = "question";
        div.innerHTML = `
          <label>Question: <textarea onchange="updateQuestion(${index}, 'question', this.value)">${q.question}</textarea></label>
          <label>Choices (comma separated): <textarea onchange="updateQuestion(${index}, 'choices', this.value)">${q.choices.join(", ")}</textarea></label>
          <label>Answer: <input value="${q.answer}" onchange="updateQuestion(${index}, 'answer', this.value)" /></label>
          <button onclick="deleteQuestion(${index})">Delete</button>
        `;
        container.appendChild(div);
      });
    }

    function updateQuestion(index, field, value) {
      if (field === "choices") {
        questions[index][field] = value.split(",").map(c => c.trim());
      } else {
        questions[index][field] = value;
      }
    }

    function deleteQuestion(index) {
      questions.splice(index, 1);
      renderQuestions();
    }

    function addQuestion() {
      questions.push({ question: "", choices: ["", "", "", ""], answer: "" });
      renderQuestions();
    }

    function downloadJSON() {
      const blob = new Blob([JSON.stringify(questions, null, 2)], { type: "application/json" });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = "grammar.json";
      a.click();
      URL.revokeObjectURL(url);
    }

    loadQuestions();
  </script>
</body>
</html>
